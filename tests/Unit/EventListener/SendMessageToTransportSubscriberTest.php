<?php

declare(strict_types=1);


namespace Ujwaldhakal\OpentracingMessengerBundle\Tests\Unit\EventListener;

use PHPUnit\Framework\TestCase;
use Symfony\Component\Messenger\Envelope;
use Symfony\Component\Messenger\Event\SendMessageToTransportsEvent;
use Ujwaldhakal\OpentracingMessengerBundle\EventSubscriber\SendMessageToTransportSubscriber;
use Ujwaldhakal\OpentracingMessengerBundle\Tracing\TracingInterface;

final class SendMessageToTransportSubscriberTest extends TestCase
{
    private TracingInterface $tracing;

    protected function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->tracing = $this->createStub(TracingInterface::class);
    }

    /**
     * @test
     */
    public function get_subscribed_events(): void
    {
        self::assertArrayHasKey(SendMessageToTransportsEvent::class, SendMessageToTransportSubscriber::getSubscribedEvents());
    }

    /**
     * @test
     */
    public function on_message_sent_to_transport_with_headers(): void
    {

        $this->tracing->expects(self::once())->method('getTracingHeaders');
        $subscriber = new SendMessageToTransportSubscriber($this->tracing);
        $event = new SendMessageToTransportsEvent(new Envelope(self::returnArgument(1)));
        $subscriber->onMessageSentToTransport($event);

    }
}